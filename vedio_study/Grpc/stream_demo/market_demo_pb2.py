# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: market_demo.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11market_demo.proto\"!\n\x0b\x44\x61taRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\"\x1c\n\x0c\x44\x61taResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"\x1d\n\rStreamRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\" \n\x0eStreamResponse\x12\x0e\n\x06result\x18\x01 \x01(\t\"#\n\x13TwoWayStreamRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"&\n\x14TwoWayStreamResponse\x12\x0e\n\x06result\x18\x01 \x01(\t2\xbe\x01\n\x0b\x44\x61taService\x12\x30\n\rSubscribeData\x12\x0c.DataRequest\x1a\r.DataResponse\"\x00\x30\x01\x12:\n\x13TestClietSendStream\x12\x0e.StreamRequest\x1a\x0f.StreamResponse\"\x00(\x01\x12\x41\n\x0cTwoWayStream\x12\x14.TwoWayStreamRequest\x1a\x15.TwoWayStreamResponse\"\x00(\x01\x30\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'market_demo_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DATAREQUEST._serialized_start=21
  _DATAREQUEST._serialized_end=54
  _DATARESPONSE._serialized_start=56
  _DATARESPONSE._serialized_end=84
  _STREAMREQUEST._serialized_start=86
  _STREAMREQUEST._serialized_end=115
  _STREAMRESPONSE._serialized_start=117
  _STREAMRESPONSE._serialized_end=149
  _TWOWAYSTREAMREQUEST._serialized_start=151
  _TWOWAYSTREAMREQUEST._serialized_end=186
  _TWOWAYSTREAMRESPONSE._serialized_start=188
  _TWOWAYSTREAMRESPONSE._serialized_end=226
  _DATASERVICE._serialized_start=229
  _DATASERVICE._serialized_end=419
# @@protoc_insertion_point(module_scope)
